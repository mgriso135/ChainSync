{"ast":null,"code":"var _jsxFileName = \"/home/matteo/ChainSync/ChainSync/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountConnected({\n  account\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Supply Chain Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account connected: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = AccountConnected;\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [products, setProducts] = useState([]);\n  const [contract, setContract] = useState(null);\n  const [selectedProductId, setSelectedProductId] = useState('');\n  const [newOwnerAddress, setNewOwnerAddress] = useState('');\n  const [price, setPrice] = useState('');\n  useEffect(() => {\n    const connectWallet = async () => {\n      if (window.ethereum) {\n        try {\n          const accounts = await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          setAccount(accounts[0]);\n        } catch (error) {\n          console.error('Error connecting to wallet:', error);\n        }\n      }\n    };\n    connectWallet();\n  }, []);\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        const response = await fetch('/SupplyChainTracker.json');\n        const data = await response.json();\n        const web3 = new Web3(window.ethereum);\n        const contractInstance = new web3.eth.Contract(data.abi, data.networks.development.address);\n        setContract(contractInstance);\n      } catch (error) {\n        console.error('Error fetching contract data:', error);\n      }\n    };\n    fetchContractData();\n  }, []);\n\n  // Assuming you have a provider connected to the Ethereum network\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const getGasPrice = async () => {\n    try {\n      const gasPrice = await provider.getGasPrice();\n      console.log('Gas Price (Wei):', gasPrice.toString()); // Output gas price in Wei\n\n      // Convert to Gwei for readability\n      const gasPriceInGwei = ethers.utils.formatUnits(gasPrice, 'gwei');\n      console.log('Gas Price (Gwei):', gasPriceInGwei);\n      return gasPrice;\n    } catch (error) {\n      console.error('Error fetching gas price:', error);\n    }\n  };\n\n  /*const getProducts = async () => {\n    try {\n      const productCount = await contract.methods.productCount().call();\n      console.log(productCount);\n      const fetchedProducts = await Promise.all(\n        Array.from({ length: productCount }, (_, i) => contract.methods.products(i).call())\n      );\n       setProducts(fetchedProducts);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };*/\n\n  const getProducts = async () => {\n    try {\n      const productCount = await contract.methods.productCount().call();\n      console.log('Product Count:', productCount.toString());\n      const fetchedProducts = [];\n      for (let i = 0; i < Number(productCount); i++) {\n        const product = await contract.methods.products(i).call();\n        console.log(product.manufacturer);\n        fetchedProducts.push(product);\n      }\n      setProducts(fetchedProducts);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const addProduct = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const productName = form.productName.value;\n    const productSerialNumber = form.productSerialNumber.value;\n    const productCurrentLocation = form.productCurrentLocation.value;\n    const isForSale = form.isForSale.value === 'true';\n    const initialPrice = Web3.utils.toWei(form.initialPrice.value, 'ether');\n    console.log(initialPrice);\n    if (!productName || !productSerialNumber) {\n      alert('Please enter a product name and serial number.');\n      return;\n    }\n    try {\n      const estimatedGasPrice = await getGasPrice(); // Get the gas price\n      const gasPriceString = estimatedGasPrice.toString(); // Convert to string\n      console.log(estimatedGasPrice);\n      await contract.methods.addProduct(productName, account, productSerialNumber, account, productCurrentLocation, initialPrice, isForSale).send({\n        from: account,\n        gasPrice: gasPriceString\n      });\n      console.log('Product added successfully');\n      getProducts(); // Refresh the product list\n    } catch (error) {\n      console.error('Error adding product:', error);\n      alert('An error occurred while adding the product.');\n    }\n  };\n  const handleTransferOwnership = async () => {\n    if (!selectedProductId || !newOwnerAddress || !price) {\n      console.error('Please fill all fields for transfer');\n      return;\n    }\n    try {\n      const priceInWei = Web3.utils.toWei(price, 'ether');\n      await contract.methods.transferOwnership(selectedProductId, newOwnerAddress).send({\n        from: account,\n        value: priceInWei\n      });\n      console.log('Ownership transferred successfully');\n      getProducts(); // Refresh the product list\n    } catch (error) {\n      console.error('Error transferring ownership:', error);\n    }\n  };\n  const handleBuyProduct = async (productId, price) => {\n    try {\n      const priceInWei = Web3.utils.toWei(price, 'ether');\n      await contract.methods.transferOwnership(productId, account, \"Buyer's Location\") // Update location as needed\n      .send({\n        from: account,\n        value: priceInWei\n      });\n      console.log('Product purchased successfully');\n      getProducts(); // Refresh the product list\n    } catch (error) {\n      console.error('Error purchasing product:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AccountConnected, {\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addProduct,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productName\",\n        children: \"Product Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"productName\",\n        name: \"productName\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productSerialNumber\",\n        children: \"Serial Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"productSerialNumber\",\n        name: \"productSerialNumber\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productCurrentLocation\",\n        children: \"Current location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"productCurrentLocation\",\n        name: \"productCurrentLocation\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"isForSale\",\n        children: \"For sale:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"isForSale\",\n        name: \"isForSale\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"true\",\n          children: \"True\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"false\",\n          children: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"initialPrice\",\n        children: \"Initial price (ETH):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"initialPrice\",\n        name: \"initialPrice\",\n        step: \"0.01\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getProducts,\n      children: \"Get Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Manufacturer: \", product.manufacturer, \" - ID: \", product.id, \" - Product: \", product.name, \" - Serial number: \", product.serialNumber, \" - Current Owner: \", product.currentOwner, \" - Current Location: \", product.currentLocation, \" - Price: \", Web3.utils.fromWei(product.price, 'ether'), \" ETH - For Sale: \", product.isForSale.toString(), product.isForSale && product.currentOwner != account && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBuyProduct(product.id, Web3.utils.fromWei(product.price, 'ether')),\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), account, \" - \", (product.currentOwner.toString().toLowerCase() != account).toString()]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedProductId,\n        onChange: e => setSelectedProductId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), products.map((product, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: product.id,\n          children: product.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Price (ETH)\",\n        step: \"0.01\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New owner address\",\n        value: newOwnerAddress,\n        onChange: e => setNewOwnerAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTransferOwnership,\n        children: \"Transfer Ownership\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FHYSyDjKTdmlSre1kuH1iA1wU2k=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AccountConnected\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","ethers","jsxDEV","_jsxDEV","AccountConnected","account","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","setAccount","products","setProducts","contract","setContract","selectedProductId","setSelectedProductId","newOwnerAddress","setNewOwnerAddress","price","setPrice","connectWallet","window","ethereum","accounts","request","method","error","console","fetchContractData","response","fetch","data","json","web3","contractInstance","eth","Contract","abi","networks","development","address","provider","providers","Web3Provider","getGasPrice","gasPrice","log","toString","gasPriceInGwei","utils","formatUnits","getProducts","productCount","methods","call","fetchedProducts","i","Number","product","manufacturer","push","addProduct","e","preventDefault","form","target","productName","value","productSerialNumber","productCurrentLocation","isForSale","initialPrice","toWei","alert","estimatedGasPrice","gasPriceString","send","from","handleTransferOwnership","priceInWei","transferOwnership","handleBuyProduct","productId","onSubmit","htmlFor","type","id","name","required","step","onClick","map","index","serialNumber","currentOwner","currentLocation","fromWei","toLowerCase","onChange","placeholder","_c2","$RefreshReg$"],"sources":["/home/matteo/ChainSync/ChainSync/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { ethers } from 'ethers'; \n\nfunction AccountConnected({ account }) {\n  return (\n    <div>\n      <h1>Supply Chain Tracker</h1>\n      <p>Account connected: {account}</p>\n    </div>\n  );\n}\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [products, setProducts] = useState([]);\n  const [contract, setContract] = useState(null);\n  const [selectedProductId, setSelectedProductId] = useState('');\n  const [newOwnerAddress, setNewOwnerAddress] = useState('');\n  const [price, setPrice] = useState('');\n\n  useEffect(() => {\n    const connectWallet = async () => {\n      if (window.ethereum) {\n        try {\n          const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n          setAccount(accounts[0]);\n        } catch (error) {\n          console.error('Error connecting to wallet:', error);\n        }\n      }\n    };\n\n    connectWallet();\n  }, []);\n\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        const response = await fetch('/SupplyChainTracker.json');\n        const data = await response.json();\n        const web3 = new Web3(window.ethereum);\n        const contractInstance = new web3.eth.Contract(data.abi, data.networks.development.address);\n        setContract(contractInstance);\n      } catch (error) {\n        console.error('Error fetching contract data:', error);\n      }\n    };\n\n    fetchContractData();\n  }, []);\n\n\n// Assuming you have a provider connected to the Ethereum network\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\n\n  const getGasPrice = async () => {\n  try {\n    const gasPrice = await provider.getGasPrice();\n    console.log('Gas Price (Wei):', gasPrice.toString()); // Output gas price in Wei\n\n    // Convert to Gwei for readability\n    const gasPriceInGwei = ethers.utils.formatUnits(gasPrice, 'gwei'); \n    console.log('Gas Price (Gwei):', gasPriceInGwei); \n\n    return gasPrice;\n  } catch (error) {\n    console.error('Error fetching gas price:', error);\n  }\n};\n\n  /*const getProducts = async () => {\n    try {\n      const productCount = await contract.methods.productCount().call();\n      console.log(productCount);\n      const fetchedProducts = await Promise.all(\n        Array.from({ length: productCount }, (_, i) => contract.methods.products(i).call())\n      );\n\n      setProducts(fetchedProducts);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };*/\n\n  const getProducts = async () => {\n    try {\n      const productCount = await contract.methods.productCount().call();\n      console.log('Product Count:', productCount.toString());\n      \n      const fetchedProducts = [];\n      for (let i = 0; i < Number(productCount); i++) {\n        const product = await contract.methods.products(i).call();\n        console.log(product.manufacturer);\n        fetchedProducts.push(product);\n      }\n\n      setProducts(fetchedProducts);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  const addProduct = async (e) => {\n    e.preventDefault();\n    const form = e.target;\n    const productName = form.productName.value;\n    const productSerialNumber = form.productSerialNumber.value;\n    const productCurrentLocation = form.productCurrentLocation.value;\n    const isForSale = form.isForSale.value === 'true';\n    const initialPrice = Web3.utils.toWei(form.initialPrice.value, 'ether');\n\n    console.log(initialPrice);\n\n    if (!productName || !productSerialNumber) {\n      alert('Please enter a product name and serial number.');\n      return;\n    }\n\n    try {\n      const estimatedGasPrice = await getGasPrice(); // Get the gas price\n      const gasPriceString = estimatedGasPrice.toString(); // Convert to string\n      console.log(estimatedGasPrice);\n\n      await contract.methods.addProduct(\n        productName,\n        account,\n        productSerialNumber,\n        account,\n        productCurrentLocation,\n        initialPrice,\n        isForSale\n      ).send({ from: account, gasPrice: gasPriceString });\n      console.log('Product added successfully');\n      getProducts(); // Refresh the product list\n    } catch (error) {\n      console.error('Error adding product:', error);\n      alert('An error occurred while adding the product.');\n    }\n  };\n\n  const handleTransferOwnership = async () => {\n    if (!selectedProductId || !newOwnerAddress || !price) {\n      console.error('Please fill all fields for transfer');\n      return;\n    }\n\n    try {\n      const priceInWei = Web3.utils.toWei(price, 'ether');\n      await contract.methods.transferOwnership(selectedProductId, newOwnerAddress)\n        .send({ from: account, value: priceInWei });\n      console.log('Ownership transferred successfully');\n      getProducts(); // Refresh the product list\n    } catch (error) {\n      console.error('Error transferring ownership:', error);\n    }\n  };\n\n  const handleBuyProduct = async (productId, price) => {\n    try {\n      const priceInWei = Web3.utils.toWei(price, 'ether');\n  \n      await contract.methods.transferOwnership(productId, account, \"Buyer's Location\") // Update location as needed\n        .send({ from: account, value: priceInWei });\n  \n      console.log('Product purchased successfully');\n      getProducts(); // Refresh the product list\n    } catch (error) {\n      console.error('Error purchasing product:', error);\n    }\n  };\n\n  return (\n    <div>\n      <AccountConnected account={account} />\n      \n      <form onSubmit={addProduct}>\n        <label htmlFor=\"productName\">Product Name:</label>\n        <input type=\"text\" id=\"productName\" name=\"productName\" required />\n        <br />\n        <label htmlFor=\"productSerialNumber\">Serial Number:</label>\n        <input type=\"text\" id=\"productSerialNumber\" name=\"productSerialNumber\" required />\n        <br />\n        <label htmlFor=\"productCurrentLocation\">Current location:</label>\n        <input type=\"text\" id=\"productCurrentLocation\" name=\"productCurrentLocation\" required />\n        <br />\n        <label htmlFor=\"isForSale\">For sale:</label>\n        <select id=\"isForSale\" name=\"isForSale\">\n          <option value=\"true\">True</option>\n          <option value=\"false\">False</option>\n        </select>\n        <br />\n        <label htmlFor=\"initialPrice\">Initial price (ETH):</label>\n        <input type=\"number\" id=\"initialPrice\" name=\"initialPrice\" step=\"0.01\" required />\n        <br />\n        <button type=\"submit\">Add Product</button>\n      </form>\n\n      <button onClick={getProducts}>Get Products</button>\n      <ul>\n        {products.map((product, index) => (\n          <li key={index}>\n            Manufacturer: {product.manufacturer} - \n            ID: {product.id} -\n            Product: {product.name} - \n            Serial number: {product.serialNumber} - \n            Current Owner: {product.currentOwner} - \n            Current Location: {product.currentLocation} - \n            Price: {Web3.utils.fromWei(product.price, 'ether')} ETH -\n            For Sale: {product.isForSale.toString()}\n            {product.isForSale && product.currentOwner != account && (\n              <button onClick={() => handleBuyProduct(product.id, Web3.utils.fromWei(product.price, 'ether'))}>\n                Buy\n            </button>\n            )}\n            {account} - {(product.currentOwner.toString().toLowerCase() != account).toString()}\n          </li>\n        ))}\n      </ul>\n\n      <div>\n        <select value={selectedProductId} onChange={(e) => setSelectedProductId(e.target.value)}>\n          <option value=\"\">Select product</option>\n          {products.map((product, index) => (\n            <option key={index} value={product.id}>{product.name}</option>\n          ))}\n        </select>\n        <input \n          type=\"number\" \n          placeholder=\"Price (ETH)\" \n          step=\"0.01\"\n          value={price} \n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <input \n          type=\"text\" \n          placeholder=\"New owner address\" \n          value={newOwnerAddress} \n          onChange={(e) => setNewOwnerAddress(e.target.value)} \n        />\n        <button onClick={handleTransferOwnership}>Transfer Ownership</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/matteo/SupplyChainTracking/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [products, setProducts] = useState([]);\n  const [contract, setContract] = useState(null);\n  useEffect(() => {\n    const connectWallet = async () => {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts[0]);\n      }\n    };\n    connectWallet();\n  }, []);\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        const response = await fetch('/SupplyChainTracker.json');\n        const data = await response.json();\n        const abi = data.abi;\n        const contractAddress = data.networks.development.address; // Replace with correct network\n\n        const web3 = new Web3(window.ethereum);\n        const contractInstance = new web3.eth.Contract(abi, contractAddress);\n        setContract(contractInstance);\n      } catch (error) {\n        console.error('Error fetching contract data:', error);\n      }\n    };\n    fetchContractData();\n  }, []);\n  const getProducts = async () => {\n    try {\n      const productCount = await contract.methods.productCount().call();\n      const products = [];\n      for (let i = 0; i < productCount; i++) {\n        const product = await contract.methods.products(i).call();\n        products.push(product);\n      }\n      setProducts(products);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const addProduct = async (productManufacturer, productName, productSerialNumber) => {\n    try {\n      console.log(productManufacturer + \" \" + productName + \" \" + productSerialNumber + \" from \" + account);\n      await contract.methods.addProduct(productManufacturer, productName, productSerialNumber, account, \"a\").send({\n        from: account\n      });\n      console.log('Product added successfully');\n    } catch (error) {\n      console.error('Error adding product:', error);\n    }\n  };\n  const handleAddProduct = e => {\n    e.preventDefault();\n    const productManufacturer = e.target.productManufacturer.value;\n    const productName = e.target.productName.value;\n    const productSerialNumber = e.target.productSerialNumber.value;\n    addProduct(productManufacturer, productName, productSerialNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Supply Chain Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getProducts,\n      children: \"Get Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddProduct,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productManufacturer\",\n        children: \"Manufacturer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"productManufacturer\",\n        name: \"productManufacturer\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productName\",\n        children: \"Product Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"productName\",\n        name: \"productName\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productSerialNumber\",\n        children: \"Serial Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"productSerialNumber\",\n        name: \"productSerialNumber\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - \", product.description]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8q2xRSqkViyyz16NpprJ1cv37hY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","jsxDEV","_jsxDEV","App","_s","account","setAccount","products","setProducts","contract","setContract","connectWallet","window","ethereum","accounts","request","method","fetchContractData","response","fetch","data","json","abi","contractAddress","networks","development","address","web3","contractInstance","eth","Contract","error","console","getProducts","productCount","methods","call","i","product","push","addProduct","productManufacturer","productName","productSerialNumber","log","send","from","handleAddProduct","e","preventDefault","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","name","required","map","index","description","_c","$RefreshReg$"],"sources":["/home/matteo/SupplyChainTracking/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [products, setProducts] = useState([]);\n  const [contract, setContract] = useState(null);\n\n  useEffect(() => {\n    const connectWallet = async () => {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        setAccount(accounts[0]);\n      }\n    };\n\n    connectWallet();\n  }, []);\n\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        const response = await fetch('/SupplyChainTracker.json');\n        const data = await response.json();\n        const abi = data.abi;\n        const contractAddress = data.networks.development.address; // Replace with correct network\n\n        const web3 = new Web3(window.ethereum);\n        const contractInstance = new web3.eth.Contract(abi, contractAddress);\n        setContract(contractInstance);\n      } catch (error) {\n        console.error('Error fetching contract data:', error);\n      }\n    };\n\n    fetchContractData();\n  }, []);\n\n  const getProducts = async () => {\n    try {\n      const productCount = await contract.methods.productCount().call();\n      const products = [];\n\n      for (let i = 0; i < productCount; i++) {\n        const product = await contract.methods.products(i).call();\n        products.push(product);\n      }\n\n      setProducts(products);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  const addProduct = async (productManufacturer, productName, productSerialNumber) => {\n    try {\n      console.log(productManufacturer + \" \" + productName + \" \" + productSerialNumber + \" from \" + account);\n      await contract.methods.addProduct(productManufacturer, productName, productSerialNumber, account, \"a\").send({ from: account });\n      console.log('Product added successfully');\n    } catch (error) {\n      console.error('Error adding product:', error);\n    }\n  };\n\n  const handleAddProduct = (e) => {\n    e.preventDefault();\n    const productManufacturer = e.target.productManufacturer.value;\n    const productName = e.target.productName.value;\n    const productSerialNumber = e.target.productSerialNumber.value;\n    addProduct(productManufacturer, productName, productSerialNumber);\n  };\n\n  return (\n    <div>\n      <h1>Supply Chain Tracker</h1>\n      <p>Account: {account}</p>\n      <button onClick={getProducts}>Get Products</button>\n      <form onSubmit={handleAddProduct}>\n      <label htmlFor=\"productManufacturer\">Manufacturer:</label>\n        <input type=\"text\" id=\"productManufacturer\" name=\"productManufacturer\" required />\n        <br />\n        <label htmlFor=\"productName\">Product Name:</label>\n        <input type=\"text\" id=\"productName\" name=\"productName\" required />\n        <br />\n        <label htmlFor=\"productSerialNumber\">Serial Number:</label>\n        <input type=\"text\" id=\"productSerialNumber\" name=\"productSerialNumber\" required />\n        <br />\n        <button type=\"submit\">Add Product</button>\n      </form>\n      <ul>\n        {products.map((product, index) => (\n          <li key={index}>{product.name} - {product.description}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}